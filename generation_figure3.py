"""
Copyright (c) [2025] [Orange SA]
Licensed under the MIT License. See the LICENSE file in the project root for full license information.
"""
import matplotlib.pyplot as plt
import numpy as np
plt.close('all')

EbN0_dB = np.arange(-30,31, 2)

# 1 BS no blockage
ber_1BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_NoBlockage_MC = np.array([0.48417343695290616, 0.4800746851474965, 0.4749727624203978, 0.46847204812100623, 0.4603648979122899, 0.4502164696444984, 0.4375163051060268, 0.42173891895625437, 0.40216536065109637, 0.37811719365480567, 0.3490697549771862, 0.31484838832994133, 0.2759482845872724, 0.23305863580783875, 0.1890036190257353, 0.14602368181159184, 0.10816483868938201, 0.07717091878255208, 0.05290425276555935, 0.035304566284521624, 0.023221225257681197, 0.01505565397545737, 0.009706685042180935, 0.006167867537640056, 0.003946397284499737, 0.0024767638989189426, 0.0015647157300420168, 0.0009950525620404413, 0.0006297186843487395, 0.0003989519391741071, 0.00024990819081538863])
ber_1BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_NoBlockage_theo = np.array([0.48419651146897463, 0.4801103966806668, 0.47497205228506667, 0.46851474305666135, 0.4604082952456141, 0.45024814048950046, 0.4375466929581995, 0.4217322423498411, 0.4021653130502085, 0.37818975504625263, 0.349244327711118, 0.31506292380703493, 0.2759687472063874, 0.23319143147623528, 0.189008368341342, 0.14644660940672605, 0.10848473204958414, 0.077136916056391, 0.05299888392563867, 0.03545906762783796, 0.023268705377204046, 0.015064680370352745, 0.009665038948438731, 0.006163834746364616, 0.003915748647931205, 0.0024814048950054235, 0.001569967884516854, 0.0009923060761367064, 0.0006267910338214611, 0.00039575294059046584, 0.0002498126561135683])

# 1 BS with 3 fisrt clusters of CDL b blocked
ber_1BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC =  np.array([0.4886559203759629, 0.4856688940224527, 0.4820032721340489, 0.4773922891910671, 0.4715767492299654, 0.464324541706331, 0.45513773001876534, 0.4438041067256981, 0.42967481511647626, 0.41218857281682203, 0.3913570927638634, 0.3665952666466977, 0.33807315687505474, 0.30617363510345547, 0.2732117066797422, 0.2409586246608018, 0.21154620857131914, 0.18755394259754682, 0.16787146816734505, 0.1545511898607099, 0.144625244140625, 0.1385273422112986, 0.13352024708809304, 0.1311636745762758, 0.12907592260537026, 0.12781886509486606, 0.12737797499370843, 0.12685284782858455, 0.12617637142747723, 0.12662499948709952, 0.12639671347054446])
ber_1BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo = np.array([0.4886536065221112, 0.48571957687198825, 0.48202966616792453, 0.47739193611310476, 0.47156847436875277, 0.46426711773205426, 0.4551344748725859, 0.44375366396055965, 0.42965343152180063, 0.4123404574947022, 0.39137306688198914, 0.3664979245251282, 0.33785912058470047, 0.30624040301461686, 0.27320956714701516, 0.24096582775884828, 0.21179874618624273, 0.18738521698579957, 0.1683635005747992, 0.1544103012246794, 0.144644100372552, 0.13803866442725704, 0.1336763777674721, 0.13084143090129002, 0.12901846778752335, 0.12785426454508725, 0.12711403785846753, 0.12664470737278016, 0.12634766643047035, 0.1261598810728613, 0.12604125074428768])

# 1 BS with 3 fisrt clusters of CDL b blocked + 1BS not blocked => 2BSs
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC =  np.array([0.48646612685601587, 0.4829113393404237, 0.4785039719012605, 0.4729642151049873, 0.4659925812365962, 0.457174538150221, 0.4463791150004924, 0.4326986540465796, 0.41596534707633054, 0.3953035165482208, 0.37045344334022673, 0.34110138708803833, 0.30703252797701114, 0.27032702534138653, 0.23156800769624256, 0.19454522482821254, 0.16182811491295737, 0.1344864968692555, 0.11316223571948311, 0.09757424918209472, 0.08650979691192884, 0.07937995974757091, 0.07455483316373425, 0.07180062943146008, 0.06972528281332065, 0.06839147060191264, 0.06750379631833202, 0.06708324528541885, 0.06669384184337798, 0.0665605398653602, 0.06632757192232362])
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo = np.array([0.4864251495847575, 0.48291516738057627, 0.478501219121615, 0.4729540562265213, 0.46598981015006774, 0.4572604587684638, 0.44634618516664487, 0.4327539902789866, 0.415930966749081, 0.39530689623937665, 0.37038823549021216, 0.340928114203647, 0.30717861774288147, 0.27016780999172907, 0.23183395516277194, 0.19478696830944514, 0.16163076190114, 0.1341619417252362, 0.11295095232869923, 0.09750337989323316, 0.08674920286331039, 0.07950318789463412, 0.07473025986092036, 0.07163378398410297, 0.0696448831625241, 0.06837562505295774, 0.06756897523666777, 0.06705768056333666, 0.06673414073600314, 0.06652962730384593, 0.06640043894167752])
colors=['#1f77b4', '#ff7f0e','#17becf', '#2ca02c', '#d62728', '#9467bd', '#8c564b','#7f7f7f', ]


# 1 BS with 3 fisrt clusters of CDL b blocked + 2BS not blocked => 3BSs
ber_3BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC = np.array([0.4856710755591299, 0.48195313953218005, 0.4773405050496761, 0.47147565740163255, 0.464145705279182, 0.4549139575263699, 0.44346595657305893, 0.42913928974910276, 0.4114863513764881, 0.38950139491831887, 0.36336624188249517, 0.3323598704618566, 0.2970764134511226, 0.25812356387867647, 0.21770431475812982, 0.17866683575285583, 0.14426237645937282, 0.11564465776544992, 0.09346189867548582, 0.07748862814168636, 0.06626270796404499, 0.05859945858226103, 0.05388163761598389, 0.05053790180623031, 0.04863681226885285, 0.04745702748872987, 0.04626522716020002, 0.04625464687828256, 0.045505819881663606, 0.04541355507046568, 0.045068672244288344])
ber_3BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo = np.array([0.48568229690290127, 0.4819802970220649, 0.47732493619643096, 0.4714744962547542, 0.46412972492401766, 0.45492385235625643, 0.44341466916949174, 0.42908331913448555, 0.4113487560955926, 0.38961342917722536, 0.36336350757533487, 0.3323493576403786, 0.2968518900387228, 0.2579720539998963, 0.2177648862741463, 0.17897757304619638, 0.14432993461473576, 0.11567772364168682, 0.09358783764720052, 0.07752039795720295, 0.06634513971416217, 0.05882037266124657, 0.053866054044222456, 0.05065285437491951, 0.04858937979046385, 0.04727269488985708, 0.046435970594702614, 0.045905640077228416, 0.045570065420982964, 0.04535794893999212, 0.045223959557048])
colors=['#1f77b4', '#ff7f0e','#17becf', '#2ca02c', '#d62728', '#9467bd', '#8c564b','#7f7f7f', ]

# 1 BS with 3 fisrt clusters of CDL b blocked + 3BS not blocked => 4BSs
ber_4BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC = np.array([0.4852940321636467, 0.48153645063982625, 0.47671104110589546, 0.4706909914844844, 0.4632189496892507, 0.4538123789554884, 0.4418756667706145, 0.4273161260353751, 0.40892267820214023, 0.38676203110638785, 0.3598957846077884, 0.3281316412062872, 0.2915867046281403, 0.25189210523076416, 0.21064746504070378, 0.17081256171902354, 0.13591231316745447, 0.10602158148415616, 0.08373949836282168, 0.06712021515149029, 0.056126243954613096, 0.04811464539429053, 0.04319702661337973, 0.039681406742384455, 0.037708282898120185, 0.036451128791360296, 0.03535548875311843, 0.035201467305672265, 0.03481061064562544, 0.03462353960138743, 0.0341626421076243])
ber_4BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo =  np.array([0.485310861475635, 0.4815128437284626, 0.4767367586392024, 0.4707346444027022, 0.4631995393979352, 0.45375526550437195, 0.4419483499232663, 0.4272468783256874, 0.4090554904234187, 0.38676252106750864, 0.3598432157581961, 0.32804530591733594, 0.2916623471992503, 0.2518297453062077, 0.2106595851155902, 0.17096823132910965, 0.1355365129591269, 0.10625439421267202, 0.08369120869316188, 0.06728664285965225, 0.05588059125979877, 0.04820217085719153, 0.04314746904401817, 0.03986950030087277, 0.03776457231596447, 0.03642149405053102, 0.03556802077692234, 0.03502708390696879, 0.034684801710364754, 0.03446844691457768, 0.03433178088561917])


# 1 BS with 3 fisrt clusters of CDL b blocked + 9BS not blocked => 10BSs
ber_10BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC = np.array([0.4846581826089811, 0.4806546935180322, 0.4757018367649794, 0.4693588812478116, 0.4615137077780331, 0.45165587011171654, 0.4393519040917148, 0.42393503055519083, 0.40501405347295166, 0.38173903521369484, 0.35341772341260724, 0.32030581690684085, 0.2825626747280944, 0.24072288876488096, 0.19784562140285802, 0.1561012315082283, 0.11911833349062281, 0.0888747946688441, 0.06550537964209122, 0.048379704665069155, 0.036686161158799455, 0.02858469730665704, 0.023441294608663777, 0.019822368888961835, 0.017754403763458507, 0.016486855728619573, 0.01566642868084734, 0.014877167175463935, 0.014484473476890755, 0.014340110800179447, 0.014275234019389006])
ber_10BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo =   np.array([0.4846422599620276, 0.48067139242556, 0.4756779685514378, 0.46940277073767106, 0.4615249264107581, 0.4516512554185056, 0.43930787979447755, 0.4239391282619822, 0.4049233988559977, 0.38162275075719393, 0.3534912572714059, 0.3202694940287412, 0.28227040382432333, 0.24068768357813547, 0.19773370619487257, 0.15635061039311599, 0.11943501494068465, 0.08894725959257549, 0.0654688640588772, 0.04840685962863739, 0.03654780247307016, 0.028566373731379546, 0.023313073217196334, 0.019906687610022733, 0.01771945388494467, 0.0163239235287308, 0.015437145096147131, 0.014875109713515022, 0.014519481479966012, 0.01429469241142256, 0.014152699332847185])


# 1 BS with 3 fisrt clusters of CDL b blocked + 9BS not blocked => 10BSs
ber_20BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC = np.array([0.4844101781337535, 0.48044206207873774, 0.4753195010914522, 0.46892781746487655, 0.46098005535221903, 0.4508747021757922, 0.43840826980206143, 0.42280809247527135, 0.4035628733915441, 0.3800405875240721, 0.35183040159423146, 0.317609305929403, 0.2789269643404237, 0.236723908069087, 0.1934645777256215, 0.15138833096715248, 0.11380086946888131, 0.08318465203464198, 0.0596216145149466, 0.042141571472338935, 0.029793066884957108, 0.02173930192194065, 0.016548764525341386, 0.012881529564950981, 0.010952668176645659, 0.009451846168154763, 0.00872394123665091, 0.008059323094472165, 0.007585179091167717, 0.007394385244332108, 0.00731032940519958])
ber_20BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo =  np.array([0.4844193872191292, 0.48039089755062014, 0.47532501639077684, 0.46895876878778964, 0.46096663447085845, 0.45094974486920364, 0.43842737917774616, 0.42283586796488226, 0.40354471271399395, 0.37990694149025217, 0.3513690978918731, 0.31766861891135995, 0.2791238600049968, 0.23694679540363128, 0.19338250044133698, 0.15141545508278598, 0.11398275100679356, 0.08307091545194184, 0.05926792845126733, 0.041971188805071, 0.029949570052865193, 0.02185901456403372, 0.016534013502767064, 0.013081189207108435, 0.010864159826747877, 0.009449628072786875, 0.00855077911431279, 0.007981095012473849, 0.007620627655050616, 0.0073927800676730215, 0.0072488551039188165])



# Parameters for line and marker sizes
line_width = 2     # General line width for non-MRT curves
mrt_line_width = 4  # Specific line width for MRT curves
marker_size = 8    # Marker size for all markers

# Génération de la figure et définition des axes
fig, ax = plt.subplots(figsize=(6, 5))  # figsize=(10, 6)
ax.set_xlabel(r"$E_b/N_0$ (dB)", fontsize=14)
ax.set_ylabel("BER", fontsize=14)
ax.set_yscale("log")
ax.grid(which="both")
ax.set_ylim([1e-3, 0.6])
#ax.set_title("D-MISO dans des canaux CDL-D avec Beamforming", fontsize=14, fontname="Calibri")

# Définition des styles pour chaque configuration de BS
#colors = ['blue', 'red', 'green']  # Couleurs pour 8BS, 4BS, 1BS


# Tracés pour chaque configuration BS

# 1 BS cluster 0,1,2 blocked
ax.semilogy(EbN0_dB, ber_1BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo,
            linewidth=2, linestyle='-', color=colors[1])
ax.semilogy(EbN0_dB, ber_1BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC,
            '*', markersize=marker_size, color=colors[1])

# 2 BS, 1 with cluster 0,1,2 blocked
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo,
            linewidth=2, linestyle='-', color=colors[2])
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC,
            '*', markersize=marker_size, color=colors[2])

# 3 BS, 1 with cluster 0,1,2 blocked
ax.semilogy(EbN0_dB, ber_3BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo,
            linewidth=2, linestyle='-', color=colors[3])
ax.semilogy(EbN0_dB, ber_3BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC,
            '*', markersize=marker_size, color=colors[3])

# 4 BS, 1 with cluster 0,1,2 blocked
ax.semilogy(EbN0_dB, ber_4BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo,
            linewidth=2, linestyle='-', color=colors[4])
ax.semilogy(EbN0_dB, ber_4BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC,
            '*', markersize=marker_size, color=colors[4])

# 10 BS, 1 with cluster 0,1,2 blocked
ax.semilogy(EbN0_dB, ber_10BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo,
            linewidth=2, linestyle='-', color=colors[5])
ax.semilogy(EbN0_dB, ber_10BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC,
            '*', markersize=marker_size, color=colors[5])

# 20 BS, 1 with cluster 0,1,2 blocked
ax.semilogy(EbN0_dB, ber_20BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_theo,
            linewidth=2, linestyle='-', color=colors[6])
ax.semilogy(EbN0_dB, ber_20BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_BlockageCluster0_1_2_MC,
            '*', markersize=marker_size, color=colors[6])

# 1 BS No blockage
ax.semilogy(EbN0_dB, ber_1BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_NoBlockage_theo,
            linewidth=2, linestyle='-', color=colors[0])
ax.semilogy(EbN0_dB, ber_1BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlB_NoBlockage_MC,
            '*', markersize=marker_size, color=colors[0])



#legend = ["MC, 1 BS","Theoretical, 1BS", "MC, 2 BS","Theoretical, 2 BS","MC, 3 BS","Theoretical, 3 BS","MC, 4 BS","Theoretical, 4 BS","MC, 10 BS","Theoretical, 10 BS","MC, 20 BS","Theoretical, 20 BS","MC, 1BS, $\mathbf{no\ blockage}$","Theoretical, 1 BS, $\mathbf{no\ blockage}$"]

legend = ["Theo, 1 BS","MC, 1BS", "Theo, 2 BS","MC, 2 BS","Theo, 3 BS","MC, 3 BS","Theo, 4 BS","MC, 4 BS","Theo, 10 BS","MC, 10 BS","Theo, 20 BS","MC, 20 Theo","Theo, 1BS, $\mathbf{NoBlk}$","MC, 1 BS, $\mathbf{NoBlk}$"]

plt.legend(legend,fontsize=10, framealpha=0.4)

# Affichage du graphique
plt.show()

################### DEUXIEME FIGURE #####################
#no blockage 
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_NoBlockage_MC = np.array([0.48422406022956055, 0.4800947019432773, 0.4750037800764837, 0.4685089350681679, 0.46036046816187415, 0.4502573768765319, 0.4375543862564557, 0.4218417059206495, 0.40215660287552524, 0.37821368904006913, 0.34917113744912026, 0.31516849293428306, 0.27587120419456845, 0.23296588288635767, 0.1888904577944459, 0.14625215418198528, 0.10861910096069678, 0.07740007843957895, 0.052659069242931546, 0.03546820974483544, 0.023301271924785538, 0.014856391286983543, 0.00967066318714986, 0.006125984085040266, 0.003919939313616071, 0.0025089107908788516, 0.0015714176295518207, 0.000990870713519783, 0.0006268669577205883, 0.0003975542853860294, 0.00024995178735556724])
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_NoBlockage_theo = np.array([0.48419651146897463, 0.48011039668066674, 0.47497205228506667, 0.46851474305666135, 0.46040829524561405, 0.4502481404895004, 0.4375466929581994, 0.421732242349841, 0.40216531305020836, 0.3781897550462525, 0.3492443277111179, 0.3150629238070347, 0.2759687472063872, 0.23319143147623506, 0.18900836834134188, 0.14644660940672583, 0.10848473204958403, 0.07713691605639084, 0.05299888392563862, 0.035459067627837904, 0.02326870537720388, 0.015064680370352912, 0.009665038948438509, 0.006163834746364616, 0.00391574864793115, 0.0024814048950054235, 0.0015699678845169651, 0.0009923060761367064, 0.0006267910338214611, 0.0003957529405903548, 0.0002498126561135128])

# 2,3,4 blocked on 1 BS, counting starts at 1
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster2_3_4_MC = np.array([0.48625972288329394, 0.48268318411348915, 0.47819236776741947, 0.4724559897201068, 0.4655246954738927, 0.45673084077380954, 0.4455251605036546, 0.4317548017742253, 0.4145124094559699, 0.39376005626860117, 0.3682307224647672, 0.33876407740830705, 0.30393341149936537, 0.26706143932182247, 0.22854194192325367, 0.19039281850435485, 0.1568405775396096, 0.1291923031419599, 0.10795205337994573, 0.09217738389301033, 0.08124223297717524, 0.07399206850709034, 0.06943210120962448, 0.06626577681853991, 0.06392369032573968, 0.0627972053079044, 0.06170095748260242, 0.061610350194765406, 0.06058365167356005, 0.060766104049041494, 0.060736280596222866])
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster2_3_4_theo =np.array([0.4862237953161864, 0.48266176728746135, 0.47818238646636074, 0.4725530264198404, 0.4654856529387166, 0.4566271704878294, 0.4455517087300824, 0.43175929113428757, 0.41468944235616956, 0.39376464401270767, 0.36848604338115676, 0.3386063270706998, 0.3043858280714539, 0.26687286014767864, 0.22803768318914652, 0.19052730797574835, 0.15697632808280737, 0.12919623671195657, 0.10775546047072904, 0.09214667269711257, 0.08128343770923802, 0.07396545124236364, 0.06914579207269728, 0.06601928964569764, 0.06401122399874803, 0.06272978540484758, 0.06191541482875651, 0.06139923453435675, 0.061072606439800114, 0.06086614219016817, 0.06073572204766503])

# 6,7,8 blocked on 1 BS
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster6_7_8_MC = np.array([0.486885309299501, 0.4835169534122243, 0.47922238304501485, 0.4738697434540222, 0.4672088742723652, 0.4587184549112614, 0.44823759704076943, 0.43511963574492296, 0.4187609623927696, 0.39890835802094277, 0.3749838761188069, 0.34629651152453167, 0.3132997349330357, 0.27793676210718665, 0.24014191101245186, 0.2047650796158307, 0.1727282184846595, 0.14537368389738708, 0.12568881336714374, 0.10994228330980829, 0.09940850436854429, 0.09262641286983543, 0.0876832627582283, 0.08457412847951681, 0.08301331421240371, 0.08153118913581058, 0.08076288987274598, 0.07970944701122637, 0.07968943534445028, 0.0797404227804403, 0.07975574311755952])
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster6_7_8_theo = np.array([0.4868998722007335, 0.4835125915885816, 0.47925290092614997, 0.4738995099867016, 0.46717836057460893, 0.4587533704847005, 0.4482189527015599, 0.4350984774382042, 0.4188567261012559, 0.3989404081597663, 0.37486800168127066, 0.3463928741979051, 0.3137465074697563, 0.27790787903052616, 0.2407388318399949, 0.20476202391286474, 0.1725109297855883, 0.14575013337586584, 0.12505776068584645, 0.109971532669419, 0.0994604285117785, 0.0923741511326851, 0.08770463001243461, 0.0846744609626377, 0.08272782368548726, 0.08148540291906697, 0.08069575455897543, 0.08019521429758608, 0.07987847089392158, 0.07967825003714807, 0.07955177182831086])

# 5 blocked on 1 BS
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster5_MC =  np.array([0.4849842488264837, 0.4810776705701812, 0.47614555978641454, 0.47003837350369837, 0.4622411596474527, 0.45256991859243695, 0.44048233160451683, 0.42528536243599, 0.4067950251389618, 0.38407111501827296, 0.3562661409778755, 0.32387984930300245, 0.28643868924522936, 0.24588764265471813, 0.2036069794128589, 0.16330838243500526, 0.126901911887802, 0.09694722322522759, 0.07355644845828957, 0.05732788598837973, 0.045800153801755075, 0.037939203513436624, 0.0327699412284445, 0.029136855181525735, 0.027031147419905463, 0.02555982744660364, 0.025041584260657387, 0.024456349434304973, 0.024075946540725666, 0.02408407943255427, 0.023412673907453607])
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster5_theo =  np.array([0.4849528945662696, 0.4810623358519247, 0.4761698932984069, 0.47002158165269403, 0.46230299712429396, 0.45262887003575425, 0.4405348247817318, 0.4254762701775744, 0.40684387654731335, 0.38401205757091084, 0.3564449777140989, 0.3238869435355247, 0.2866424574289792, 0.24587875827669314, 0.2037620212112256, 0.16317573023778625, 0.12696169819067354, 0.09704609346682164, 0.07400347396545232, 0.05725536059313807, 0.045613034731187385, 0.037776787819858104, 0.03261873904292323, 0.029273986118887485, 0.027126271797671964, 0.02575593366585155, 0.024885154285530564, 0.024333255330373393, 0.023984039448634142, 0.02376330297215562, 0.023623869568326572])

# 1 blocked on 1 BS
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster1_MC =  np.array([0.4846867460363051, 0.4807121964996936, 0.4756979327375481, 0.46947696290430235, 0.46165198574547006, 0.4518302938851322, 0.4394225851961879, 0.42409390147660625, 0.40520811620546654, 0.38176124893316704, 0.3536760175261511, 0.32055714326746326, 0.28272167729396447, 0.2409421280719319, 0.1979750757724965, 0.15720938033416493, 0.11999358874409138, 0.08995611452588848, 0.06675982990852591, 0.049334773215927, 0.03802323199787728, 0.02984430906151523, 0.024454723539806548, 0.021323023349964988, 0.019126344141172095, 0.017576387977065826, 0.01688331582633053, 0.016215148412880777, 0.01562152424446341, 0.015596711829262954, 0.0153332075017507])
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster1_theo = np.array([0.48468487722592, 0.4807250278304848, 0.47574545854029515, 0.4694876699093251, 0.46163167745676326, 0.45178538751292413, 0.4394762281494722, 0.4241500527837133, 0.40518695176485897, 0.3819506949957516, 0.3538967675435993, 0.32076630047139154, 0.28287113930606567, 0.2414014177422334, 0.19856321260043192, 0.1572905913515225, 0.12047254518237294, 0.09006456801389606, 0.0666470859149717, 0.04962904578442984, 0.03780039042389688, 0.029839348877097438, 0.024599433969669127, 0.02120171377256047, 0.019020038161444153, 0.017628051638217457, 0.0167435241168446, 0.01618291495102292, 0.01582818899710342, 0.015603970186547578, 0.015462337298719209])

# 9 blocked on 1 BS
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster9_MC =  np.array([0.4844803634344363, 0.48042714693299193, 0.4753384425059086, 0.46898501612559085, 0.4610304341463148, 0.450860539284073, 0.43849692806810225, 0.42291094269739143, 0.40371480476956406, 0.3800320614085478, 0.35156213584066437, 0.31773609663592, 0.27915052739845936, 0.2370158988888524, 0.19398565041250876, 0.15179528329886643, 0.11469014485677083, 0.0836803754705007, 0.05989453740480567, 0.042276436941964285, 0.030542411056219364, 0.022710337064513305, 0.0172422658028055, 0.013830446729473039, 0.011342441761860994, 0.010168626288405987, 0.00930774849002101, 0.008511012315082283, 0.00836304565771621, 0.008088878129376751, 0.007952557732077205])
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster9_theo =  np.array([0.4844412759488898, 0.48041844554907964, 0.4753596807651853, 0.46900237578660353, 0.46102146705034114, 0.45101864514750956, 0.4385138622830167, 0.42294423639467443, 0.40368014621621817, 0.38007551317288707, 0.35157763145497395, 0.3179242639797313, 0.279433259213206, 0.23731482329426506, 0.19381083666143373, 0.1519016108844085, 0.11452021862531103, 0.08365055135212007, 0.059879898703102064, 0.0426065764456372, 0.030601192666637633, 0.022521544051125164, 0.017203713006870625, 0.013755534178659878, 0.011541486068580353, 0.010128855820632554, 0.00923121489601575, 0.008662296333615316, 0.008302313329247746, 0.008074771879616083, 0.007931040287874946])

# 5 blocked on 17 BS
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster17_MC =  np.array([0.4842564259590555, 0.48016300147988883, 0.47500962543220415, 0.4686332775297619, 0.46049831700258226, 0.4505533939650079, 0.4377071075012036, 0.4219335168149291, 0.4026190749737395, 0.3786311370251225, 0.3497430351535145, 0.31603573582753414, 0.27665934928658964, 0.23440635360589548, 0.1896951353783701, 0.14797594941296832, 0.1096078551049326, 0.07863559071089374, 0.054273341416644784, 0.03676174986596201, 0.02477123613117122, 0.016654933213519782, 0.011334131064535189, 0.007806430677739846, 0.00558977057619923, 0.0041586568709515055, 0.00330532896752451, 0.0027021494633009454, 0.0023839613970588237, 0.00211535200017507, 0.001967180182619923])
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster17_theo = np.array([0.4842513077332717, 0.4801793608754791, 0.4750588327744124, 0.4686239129792336, 0.46054557238900723, 0.4504206450671604, 0.4377632351206888, 0.42200361322897845, 0.4025045185361352, 0.37861207151531684, 0.34976696955988396, 0.3157040153711685, 0.27674527442517866, 0.23411609729708727, 0.19008596707087555, 0.14767144675349253, 0.10984081777818844, 0.07860132208166348, 0.054546656836533536, 0.037067395418692806, 0.024919107408882202, 0.01674339234156741, 0.011362381110878339, 0.00787325589237653, 0.005632925122780075, 0.004203529305011555, 0.003295236325775497, 0.0027195671495491847, 0.0023553129312535726, 0.002125071786260646, 0.001979634909660799])

# 9 blocked on 24 BS
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster24_MC =  np.array([0.4841909849877451, 0.4801368401364452, 0.47494080615644696, 0.4684948610791973, 0.4604151399329263, 0.4502867233319109, 0.4375713359074098, 0.4218122261111476, 0.4024031336167279, 0.3781888116574755, 0.3492839071663822, 0.31482075154280464, 0.2761605176738664, 0.23312641731497286, 0.18918962580149248, 0.14659921854483982, 0.10839982575061274, 0.07730230593213848, 0.05334684142211572, 0.035665459298953955, 0.023528403060442928, 0.015310928814885329, 0.00986487466080182, 0.006414697470785189, 0.004187245943299195, 0.002671048888305322, 0.0017937958874956232, 0.0012008008769914217, 0.0008347010679271709, 0.0006031265045080532, 0.0004804937111563375])
ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster24_theo = np.array([0.4842035706058755, 0.4801192810111216, 0.47498323181985724, 0.4685288069509405, 0.4604259801342752, 0.4502703637150066, 0.4375745896473554, 0.4217672029799593, 0.4022090136988724, 0.37824416480471457, 0.34931166623367393, 0.3151455294011328, 0.2760688135148486, 0.23331060256321573, 0.18914727079890514, 0.14660451781768807, 0.10865959104919598, 0.07732577134773505, 0.05319851578323187, 0.035666529850367334, 0.023481609587463703, 0.01528124690353716, 0.009884015869393137, 0.006384374578728369, 0.004137292001509918, 0.002703588520921174, 0.0017925583627500519, 0.0012151544137448123, 0.0008498025315350488, 0.0006188675699541069, 0.0004729924308154998])


fig, ax = plt.subplots(figsize=(6, 5))  # figsize=(10, 6)
ax.set_xlabel(r"$E_b/N_0$ (dB)", fontsize=14)
ax.set_ylabel("BER", fontsize=14)
ax.set_yscale("log")
ax.grid(which="both")
ax.set_ylim([1e-3, 0.6])


# Tracés pour chaque configuration BS

# 2 BS cluster 6,7,8 blocked on 1 BS
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster6_7_8_theo,
            linewidth=2, linestyle='-', color=colors[1])
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster6_7_8_MC,
            '*', markersize=marker_size, color=colors[1])

# 2 BS cluster 2,3,4 blocked on 1 BS :: warning counting starts at 1
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster2_3_4_theo,
            linewidth=2, linestyle='-', color=colors[2])
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster2_3_4_MC,
            '*', markersize=marker_size, color=colors[2])

# 2 BS cluster 5 blocked on 1 BS
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster5_theo,
            linewidth=2, linestyle='-', color=colors[3])
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster5_MC,
            '*', markersize=marker_size, color=colors[3])

# 2 BS cluster 1 blocked on 1 BS
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster1_theo,
            linewidth=2, linestyle='-', color=colors[4])
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster1_MC,
            '*', markersize=marker_size, color=colors[4])

# 2 BS cluster 9 blocked on 1 BS
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster9_theo,
            linewidth=2, linestyle='-', color=colors[5])
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster9_MC,
            '*', markersize=marker_size, color=colors[5])

# 2 BS cluster 24 blocked on 1 BS
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster24_theo,
            linewidth=2, linestyle='-', color=colors[6])
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_BlockageCluster24_MC,
            '*', markersize=marker_size, color=colors[6])

# No blockage
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_NoBlockage_theo,
            linewidth=2, linestyle='-', color=colors[0])
ax.semilogy(EbN0_dB, ber_2BS_orientation_000_2bitsPerSymb_1TxPerBS_NoBeamforming_NO_PHASE_COMPENSATION_cdlC_NoBlockage_MC,
            '*', markersize=marker_size, color=colors[0])


# legend
legend = [
    "Theo, BlkClust={6,7,8}",
    "MC, BlkClust={6,7,8}",
    "Theo, BlkClust={2,3,4}",
    "MC, BlkClust={2,3,4}",
    "Theo, BlkClust={1}",
    "MC, BlkClust={1}",
    "Theo, BlkClust={5}",
    "MC, BlkClust={5}",
    "Theo, BlkClust={9}",
    "MC, BlkClust={9}",
    # "MC, BlkClust = {17}",
    # "Theo, BlkClust = {17}",
    "Theo, BlkClust={24}",
    "MC, BlkClust={24}",
    "Theo, $\\mathbf{NoBlk}$",
    "MC, $\\mathbf{NoBlk}$"
]

#plt.xlim(-35,33)
plt.legend(legend,fontsize=10, framealpha=0.4, loc='lower left',bbox_to_anchor=(-0.015, -0.00))
# Affichage du graphique
plt.show()
